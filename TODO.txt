Brett test enhancing:
---------------------

TODO 
* Make the output match (why aren't schemes numbered the same...)
* Only makes sense to report ONE IC in the greedy algo output...
* make progress part of the reporter too
* change name back to full_name in subset reporting
*
*
* THEN USE Analysis results to produce a test_object_compartor.
* The write methods for comparining that into AnalysisResults (with epsilon differences)
*
* THEN: Do a folder diff on example folder, making sure that these changes
* produce expactly the same thing!
*
* THEN: ask Rob to double check
*
* THEN: think about using __slots__ in subset and scheme?
* THEN: Consider dropping part_subsets in schemes (only need it for checking...)
* THEN: think about ditching schemes, and subset info?


DONE
* move path creation into config
* make results member of scheme? or keep a paired list
* put all of the summarising of results info (finding best) into the AnalysisResults
* move subset writing out into reporter
* finish making reports fleshed out
* Final wiritng takes Analysis results
* think about reporter, how should it look? with config?


Before initial release (in order of priority)
---------------------------------------------

- the numbers of columns are wrong when we warn that there are missing columns. Need to add 1 to the final number.


Done
____
- we don't save phyml output by default now, but we have the option to
- we have universal line break support now
- flag a warning if ANYTHING in the .cfg file has changed. Do this by putting a copy of the .cfg file in the 'analysis' folder, loading it and comparing it to the current one
- fixed all scheme and subset number calculators
- mrbayes and raxml now options for model spec in the config file
- Get better .cfg parsing, so that we get useful error messages
- semicolons now needed, fixes some bugs in .cfg input
- add a more efficient Bell-number counter when counting schemes
- Use all CPU's default (rather than 1)
- Only use the user schemes if 'search' == 'user'
- check that Brett's implementation of source alignment and filtered alignment works.
- build initial tree and branchlengths NOT from the source alignment, but from the un-partitioned alignment. These can be different e.g. if I exclude some sites from all of my partitions. This is really important.
- Ordered scheme output in partitions in codon order (in scheme.py.write_summary)
- implemented Greedy search algorithm. Right now it works on whatever metric you specify in model_selection
- tidied up output of all_schemes.txt, best_schemes.txt, and the subset output files too
- Added model_selection option, AIC, AICc, or BIC now implemented
- Added branch_lengths option 'linked' or 'unlinked'
- Fixed calling of PhyML so that it actually constrains brlens
- PhyML constrained_lens option fixed by Stephane
- Added an error message if you specify a partition with sites that aren't in the alignment
- Fixed partition definition to include single sites
- optional charset at beginning of partition def 
